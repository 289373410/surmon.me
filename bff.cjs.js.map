{"version":3,"file":"bff.cjs.js","sources":["../src/environment.ts","../src/config/app.config.ts","../src/transforms/outside.ts","../src/server/helper.ts","../src/server/gtag.ts","../src/server/ghchart.ts","../src/server/archive/sitemap.ts","../src/server/archive/rss.ts","../src/server/archive/index.ts","../src/constants/error.ts","../src/constants/tunnel.ts","../src/server/tunnel/bilibili.ts","../src/server/tunnel/wallpaper.ts","../src/server/tunnel/github.ts","../src/server/tunnel/music.ts","../src/server/tunnel/index.ts","../src/server/runtime/template.ts","../src/server/runtime/dev.ts","../src/server/runtime/prod.ts","../src/config/bff.config.ts","../src/bff.ts"],"sourcesContent":["/**\n * @file Dev environment\n * @module environment\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum NodeEnv {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test'\n}\n\nexport const NODE_ENV = process.env.NODE_ENV as NodeEnv\nexport const isDev = process.env.NODE_ENV === NodeEnv.Development\nexport const isProd = process.env.NODE_ENV === NodeEnv.Production\nexport const isTest = process.env.NODE_ENV === NodeEnv.Test\n","/**\n * @file App config\n * @module config.app\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const DEFAULT_FETCH_DELAY = 468\nexport const PRIMARY_COLOR = '#0088f5'\nexport const MUSIC_ALBUM_ID = '638949385'\nexport const BILIBILI_UID = '27940710'\nexport const GITHUB_UID = 'surmon-china'\nexport const GA_MEASUREMENT_ID = 'UA-84887611-3'\nexport const ADSENSE_CLIENT_ID = 'ca-pub-4710915636313788'\n\nexport const META = Object.freeze({\n  title: 'Surmon.me',\n  keywords: 'Surmon 博客,surmon-china,苏尔蒙,Vue 博客,前端技术开发博客,JavaScript 技术',\n  description: '来苏之望',\n  domain: 'surmon.me',\n  url: 'https://surmon.me',\n  author: 'Surmon',\n  email: 'i@surmon.me'\n})\n\nexport const FRIEND_LINKS = Object.freeze({\n  JimmyLv: '//blog.jimmylv.info'\n  // SkyRover: '//skyrover.me',\n  // Jooger: '//jooger.me'\n})\n\nexport const VALUABLE_LINKS = Object.freeze({\n  RSS: '/rss.xml',\n  SITE_MAP: '/sitemap.xml',\n  SPONSOR: '/sponsor',\n\n  SURMON_ME: 'https://github.com/surmon-china/surmon.me',\n  GITHUB_BLOG_LIST: 'https://github.com/stars/surmon-china/lists/surmon-me',\n  VUNIVERSAL: 'https://github.com/surmon-china/vuniversal',\n  NODEPRESS: 'https://github.com/surmon-china/nodepress',\n  SURMON_ME_NATIVE: 'https://github.com/surmon-china/surmon.me.native',\n  APP_APK_FILE:\n    'https://raw.githubusercontent.com/surmon-china/surmon.me.native/master/dist/android/surmon.me.apk',\n\n  THROW_ERROR: 'https://throwerror.io',\n  FOX_FINDER: 'https://foxfinder.io',\n  GITHUB: 'https://github.com/surmon-china',\n  GITHUB_SPONSORS: 'https://github.com/sponsors/surmon-china',\n  PAYPAL: 'https://www.paypal.me/surmon',\n  UPWORK: 'https://www.upwork.com/freelancers/~0142e621258ac1770d',\n  FUCK_IPC: 'http://www.beian.miit.gov.cn',\n\n  GOOGLE_LIVE_MAP: 'https://www.google.com/maps/d/embed?mid=1sRx6t0Yj1TutbwORCvjwTMgr70r62Z6w',\n  QQ_GROUP:\n    'https://shang.qq.com/wpa/qunwpa?idkey=837dc31ccbcd49feeba19430562be7bdc06f4428880f78a391fd61c8af714ce4',\n  TELEGRAM: 'https://t.me/surmon',\n  TELEGRAM_GROUP: 'https://t.me/joinchat/F6wOlxYwSCUpZTYj3WTAWA',\n  SPOTIFY: 'https://open.spotify.com/user/v0kz9hpwpbqnmtnrfhbyl812o',\n  MUSIC_163: 'https://music.163.com/#/playlist?id=638949385',\n  YOUTUBE: 'https://www.youtube.com/channel/UCoL-j6T28PLSJ2U6ZdONS0w',\n  DOUBAN: 'https://www.douban.com/people/nocower',\n  ZHIHU: 'https://www.zhihu.com/people/surmon',\n  WEIBO: 'https://weibo.com/surmon',\n  QUORA: 'https://www.quora.com/profile/Surmon',\n  BILIBILI: 'https://space.bilibili.com/27940710',\n  STACK_OVERFLOW: 'https://stackoverflow.com/users/6222535/surmon?tab=profile',\n  LEETCODE_CN: 'https://leetcode-cn.com/u/surmon',\n  LINKEDIN: 'https://www.linkedin.com/in/surmon',\n  INSTAGRAM: 'https://www.instagram.com/surmon666',\n  TWITTER: 'https://twitter.com/surmon_me'\n})\n","/**\n * @file Outside\n * @module service.outside\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const getGAScriptURL = (gaMeasurementID: string) => {\n  return `https://www.googletagmanager.com/gtag/js?id=${gaMeasurementID}`\n}\n","/**\n * @file BFF Server helper\n * @module server.helper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport { isDev } from '@/environment'\n\nexport const ROOT_PATH = process.cwd()\nexport const PRDO_CLIENT_PATH = path.join(ROOT_PATH, 'dist', 'client')\nexport const PRDO_SERVER_PATH = path.join(ROOT_PATH, 'dist', 'server')\n\nexport const PUBLIC_PATH = isDev ? path.join(ROOT_PATH, 'public') : PRDO_CLIENT_PATH\nexport const EFFECTS_PATH = path.join(PUBLIC_PATH, 'effects')\n\nexport const packageJSON = JSON.parse(\n  fs.readFileSync(path.resolve(ROOT_PATH, 'package.json'), 'utf-8')\n)\n","/**\n * @file BFF GA updater\n * @module server.gtag\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport axios from 'axios'\nimport { GA_MEASUREMENT_ID } from '@/config/app.config'\nimport { getGAScriptURL } from '@/transforms/outside'\nimport { EFFECTS_PATH } from './helper'\n\nconst UPDATE_TIME = {\n  HOURS_1: 1000 * 60 * 60 * 1,\n  HOURS_24: 1000 * 60 * 60 * 24\n}\n\nexport const startGTagScriptUpdater = () => {\n  ;(function doUpdate() {\n    axios\n      .get<any>(getGAScriptURL(GA_MEASUREMENT_ID), { timeout: 6000 })\n      .then((response) => {\n        if (response.status === 200) {\n          fs.writeFileSync(path.resolve(EFFECTS_PATH, 'gtag.js'), response.data)\n          console.info('[GA Script]', '更新成功', new Date())\n          setTimeout(doUpdate, UPDATE_TIME.HOURS_24)\n        } else {\n          console.warn('[GA Script]', '更新失败', new Date(), response.data)\n          setTimeout(doUpdate, UPDATE_TIME.HOURS_1)\n        }\n      })\n      .catch((error) => {\n        console.warn(\n          '[GA Script]',\n          '更新网络连接失败',\n          new Date(),\n          error.message,\n          error?.toJSON?.()\n        )\n        setTimeout(doUpdate, UPDATE_TIME.HOURS_1)\n      })\n  })()\n}\n","/**\n * @file BFF ghchart updater\n * @module server.ghchart\n * @author Surmon <https://github.com/surmon-china>\n * @repo https://github.com/sallar/github-contributions-chart\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport axios from 'axios'\nimport { GITHUB_UID } from '@/config/app.config'\nimport { EFFECTS_PATH } from './helper'\n\nconst UPDATE_TIME = {\n  HOURS_05: 1000 * 60 * 30,\n  HOURS_6: 1000 * 60 * 60 * 6\n}\n\nexport const startGitHubChartUpdater = () => {\n  ;(function doUpdate() {\n    axios\n      .get<any>(`https://ghchart.rshah.org/${GITHUB_UID}`, { timeout: 8000 })\n      .then((response) => {\n        if (response.status === 200) {\n          fs.writeFileSync(path.resolve(EFFECTS_PATH, 'ghchart.svg'), response.data)\n          console.info('[GitHub Chart]', '更新成功', new Date())\n          setTimeout(doUpdate, UPDATE_TIME.HOURS_6)\n        } else {\n          console.warn('[GitHub Chart]', '更新失败', new Date(), response.data)\n          setTimeout(doUpdate, UPDATE_TIME.HOURS_05)\n        }\n      })\n      .catch((error) => {\n        console.warn('[GitHub Chart]', '更新网络连接失败', new Date(), error?.toJSON?.())\n        setTimeout(doUpdate, UPDATE_TIME.HOURS_05)\n      })\n  })()\n}\n","/**\n * @file Archive sitemap generator\n * @module server.archive.sitemap\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { Readable } from 'stream'\nimport { SitemapStream, streamToPromise, SitemapItemLoose, EnumChangefreq } from 'sitemap'\nimport { META } from '@/config/app.config'\nimport { getArticleUrl, getPageUrl, getTagUrl, getCategoryUrl } from '.'\n\nexport const getSitemapXML = (archive) => {\n  const sitemapStream = new SitemapStream({\n    hostname: META.url\n  })\n\n  const sitemapItemList: SitemapItemLoose[] = [\n    { url: META.url, changefreq: EnumChangefreq.ALWAYS, priority: 1 },\n    {\n      url: getPageUrl('about'),\n      changefreq: EnumChangefreq.YEARLY,\n      priority: 1\n    },\n    {\n      url: getPageUrl('merch'),\n      changefreq: EnumChangefreq.YEARLY,\n      priority: 1\n    },\n    {\n      url: getPageUrl('archive'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    },\n    {\n      url: getPageUrl('guestbook'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    }\n  ]\n\n  archive.categories.forEach((category) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getCategoryUrl(category.slug)\n    })\n  })\n\n  archive.tags.forEach((tag) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getTagUrl(tag.slug)\n    })\n  })\n\n  archive.articles.forEach((article) => {\n    sitemapItemList.push({\n      priority: 0.8,\n      changefreq: EnumChangefreq.DAILY,\n      url: getArticleUrl(article.id),\n      lastmodISO: new Date(article.update_at).toISOString()\n    })\n  })\n\n  return streamToPromise(Readable.from(sitemapItemList).pipe(sitemapStream))\n}\n","/**\n * @file Archive RSS generator\n * @module server.archive.rss\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport RSS from 'rss'\nimport { META } from '@/config/app.config'\nimport { packageJSON } from '../helper'\nimport { getArticleUrl } from '.'\n\nexport const getRSSXML = (archive) => {\n  const feed = new RSS({\n    title: META.title,\n    description: META.description,\n    site_url: META.url,\n    feed_url: `${META.url}/rss.xml`,\n    image_url: `${META.url}/icon.png`,\n    managingEditor: META.author,\n    webMaster: META.author,\n    generator: `${packageJSON.name} ${packageJSON.version}`,\n    categories: archive.categories.map((category) => category.slug),\n    copyright: `${new Date().getFullYear()} ${META.title}`,\n    language: 'zh',\n    ttl: 60\n  })\n  archive.articles.forEach((article) =>\n    feed.item({\n      title: article.title,\n      description: article.description,\n      url: getArticleUrl(article.id),\n      guid: getArticleUrl(article.id),\n      categories: article.category.map((category) => category.slug),\n      author: META.author,\n      date: article.create_at,\n      enclosure: {\n        url: article.thumb\n      }\n    })\n  )\n  return feed.xml({ indent: true })\n}\n","/**\n * @file BFF archive cacher\n * @module server.archive\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport LRU from 'lru-cache'\nimport { loadEnv } from 'vite'\nimport { RequestHandler } from 'express'\nimport { META } from '@/config/app.config'\nimport { getSitemapXML } from './sitemap'\nimport { getRSSXML } from './rss'\nimport { ROOT_PATH } from '../helper'\n\nexport const getPageUrl = (page) => `${META.url}/${page}`\nexport const getTagUrl = (tag) => `${META.url}/tag/${tag}`\nexport const getCategoryUrl = (category) => `${META.url}/category/${category}`\nexport const getArticleUrl = (id) => `${META.url}/article/${id}`\n\nconst appProdENV = loadEnv('production', ROOT_PATH)\nconst archiveURL = `${appProdENV.VITE_API_ONLINE_URL}/archive`\nconst UPDATE_TIME = {\n  HOURS_05: 1000 * 60 * 30,\n  HOURS_1: 1000 * 60 * 60\n}\n\nenum ArchiveCacheKey {\n  Data = 'data',\n  Sitemap = 'sitemap',\n  RSS = 'rss'\n}\nconst archiveCache = new LRU({\n  max: Infinity,\n  maxAge: 1000 * 60 * 60 * 2 // 2 hour cache\n})\n\nexport const handleSitemapRequest: RequestHandler = (_, response) => {\n  response.header('Content-Type', 'application/xml')\n  response.send(archiveCache.get(ArchiveCacheKey.Sitemap))\n}\n\nexport const handleRSSRequest: RequestHandler = (_, response) => {\n  response.header('Content-Type', 'application/xml')\n  response.send(archiveCache.get(ArchiveCacheKey.RSS))\n}\n\nexport const fecthArchiveData = () => {\n  return axios\n    .get<any>(archiveURL, { timeout: 6000 })\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data.result\n      } else {\n        return Promise.reject(response.statusText)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON?.() || error)\n    })\n}\n\nexport const startArchiveUpdater = () => {\n  ;(function doUpdate() {\n    fecthArchiveData()\n      .then(async (archive) => {\n        const sitemap = await getSitemapXML(archive)\n        archiveCache.set(ArchiveCacheKey.Data, archive)\n        archiveCache.set(ArchiveCacheKey.RSS, getRSSXML(archive))\n        archiveCache.set(ArchiveCacheKey.Sitemap, sitemap.toString())\n        setTimeout(doUpdate, UPDATE_TIME.HOURS_1)\n      })\n      .catch((error) => {\n        console.warn('[archive]', '更新失败', new Date(), error)\n        setTimeout(doUpdate, UPDATE_TIME.HOURS_05)\n      })\n  })()\n}\n","/**\n * @file Error constant\n * @module constant.error\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const BAD_REQUEST = 400\nexport const NOT_FOUND = 404\nexport const INVALID_ERROR = 500\n","/**\n * @file Tunnel constant\n * @module constant.tunnel\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum TunnelModule {\n  BiliBili = 'bilibili',\n  Wallpaper = 'wallpaper',\n  GitHub = 'gitHub',\n  Music = 'music'\n}\n\nexport const getTunnelApiPath = (moduleName: TunnelModule) => {\n  return `/${moduleName}`\n}\n","/**\n * @file BFF Server bilibili\n * @module server.tunnel.bilibili\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { TunnelModule } from '@/constants/tunnel'\nimport { BILIBILI_UID, META } from '@/config/app.config'\nimport { tunnelCache } from '.'\n\nconst PAGE_SIZE = 45\nconst PAGE = 1\n\nconst fetchVideoData = async (): Promise<Array<any>> => {\n  const videosResult = await axios.request<any>({\n    headers: { 'User-Agent': META.title },\n    url: `https://api.bilibili.com/x/space/arc/search?mid=${BILIBILI_UID}&ps=${PAGE_SIZE}&tid=0&pn=${PAGE}&order=pubdate&jsonp=jsonp`\n  })\n  if (videosResult.data.code === 0) {\n    return videosResult.data.data.list.vlist\n  } else {\n    throw new Error(String(videosResult.status + videosResult.statusText))\n  }\n}\n\nconst autoUpdateData = () => {\n  fetchVideoData()\n    .then((data) => {\n      tunnelCache.set(TunnelModule.BiliBili, data)\n      // 成功后 1 小时更新一次数据\n      setTimeout(autoUpdateData, 1000 * 60 * 60 * 1)\n    })\n    .catch((error) => {\n      // 失败后 5 分钟更新一次数据\n      console.warn('[Tunnel BiliBili]', '请求失败', error)\n      setTimeout(autoUpdateData, 1000 * 60 * 5)\n    })\n}\n\nautoUpdateData()\n\nexport const bilibiliService = async (): Promise<any> => {\n  if (tunnelCache.has(TunnelModule.BiliBili)) {\n    return tunnelCache.get(TunnelModule.BiliBili)\n  } else {\n    const data = await fetchVideoData()\n    tunnelCache.set(TunnelModule.BiliBili, data)\n    return data\n  }\n}\n","/**\n * @file BFF Server wallpaper\n * @module server.tunnel.wallpaper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport schedule from 'node-schedule'\nimport WonderfulBingWallpaper, { WonderfulBingWallpaperOption } from 'wonderful-bing-wallpaper'\nimport { TunnelModule } from '@/constants/tunnel'\nimport { tunnelCache } from '.'\n\nexport interface IWallpaper {\n  zh: any\n  en: any\n}\n\nconst wbw = new WonderfulBingWallpaper()\n\n// 获取今日壁纸\nconst fetchWallpapers = async (params?: WonderfulBingWallpaperOption): Promise<any> => {\n  const wallpaperJSON = await wbw.getWallpapers({ ...params, size: 8 })\n  try {\n    return wbw.humanizeWallpapers(wallpaperJSON)\n  } catch (error) {\n    throw 'wallpaper 控制器解析 JSON 失败' + error\n  }\n}\n\n// 今日壁纸缓存（ZH）\nconst fetchZHWallpapers = () => {\n  return fetchWallpapers({\n    local: 'zh-CN',\n    host: 'cn.bing.com',\n    ensearch: 0\n  })\n}\n\n// 今日壁纸缓存（EN）\nconst getENWallpapers = () => {\n  return fetchWallpapers({\n    local: 'en-US',\n    host: 'bing.com',\n    ensearch: 1\n  })\n}\n\nconst fetchAllWallpapers = async (): Promise<IWallpaper> => {\n  const [zh, en] = await Promise.all([fetchZHWallpapers(), getENWallpapers()])\n  return { zh, en }\n}\n\nconst autoUpdateData = () => {\n  fetchAllWallpapers()\n    .then((data) => {\n      // 成功后，仅 set cache\n      tunnelCache.set(TunnelModule.Wallpaper, data)\n    })\n    .catch((error) => {\n      // 失败后 30 分钟更新一次数据\n      console.warn('[Tunnel Wallpaper]', '请求失败', error)\n      setTimeout(autoUpdateData, 1000 * 60 * 30)\n    })\n}\n\n// 初始化默认拉取数据\nautoUpdateData()\n// 周期时间定为每天的 0:00:10 重新获取数据\nschedule.scheduleJob('10 0 0 * * *', autoUpdateData)\n\nexport const wallpaperService = async (): Promise<any> => {\n  // GFW! https://www.ithome.com/0/592/920.htm\n  return Promise.reject(`GFW! https://www.ithome.com/0/592/920.htm`)\n  // if (tunnelCache.has(TunnelModule.Wallpaper)) {\n  //   return tunnelCache.get(TunnelModule.Wallpaper)\n  // } else {\n  //   const data = await fetchAllWallpapers()\n  //   tunnelCache.set(TunnelModule.Wallpaper, data)\n  //   return data\n  // }\n}\n","/**\n * @file BFF Server github\n * @module server.tunnel.github\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { TunnelModule } from '@/constants/tunnel'\nimport { GITHUB_UID, META } from '@/config/app.config'\nimport { tunnelCache } from '.'\n\nexport interface IGithubRepository {\n  html_url: string\n  name: string\n  fork: boolean\n  forks: number\n  forks_count: number\n  description: string\n  open_issues_count: number\n  stargazers_count: number\n  created_at: string\n  language: string\n}\n\nconst fetchGitHubRepositories = async (): Promise<Array<IGithubRepository>> => {\n  const response = await axios.request<any>({\n    headers: { 'User-Agent': META.title },\n    url: `http://api.github.com/users/${GITHUB_UID}/repos?per_page=1000`\n  })\n  return response.data.map(\n    (rep) =>\n      ({\n        html_url: rep.html_url,\n        name: rep.name || ' ',\n        fork: rep.fork,\n        forks: rep.forks,\n        forks_count: rep.forks_count,\n        description: rep.description || ' ',\n        open_issues_count: rep.open_issues_count,\n        stargazers_count: rep.stargazers_count,\n        created_at: rep.created_at,\n        language: rep.language\n      } as IGithubRepository)\n  )\n}\n\nconst autoUpdateData = () => {\n  fetchGitHubRepositories()\n    .then((data) => {\n      tunnelCache.set(TunnelModule.GitHub, data)\n      // 成功后 2 小时更新一次数据\n      setTimeout(autoUpdateData, 1000 * 60 * 60 * 2)\n    })\n    .catch((error) => {\n      // 失败后 10 分钟更新一次数据\n      console.warn('[Tunnel GitHub]', '请求失败', error)\n      setTimeout(autoUpdateData, 1000 * 60 * 10)\n    })\n}\n\nautoUpdateData()\n\nexport const githubService = async (): Promise<any> => {\n  if (tunnelCache.has(TunnelModule.GitHub)) {\n    return tunnelCache.get(TunnelModule.GitHub)\n  } else {\n    const data = await fetchGitHubRepositories()\n    tunnelCache.set(TunnelModule.GitHub, data)\n    return data\n  }\n}\n","/**\n * @file BFF Server music\n * @module server.tunnel.music\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport NeteaseMusic from 'simple-netease-cloud-music'\nimport { TunnelModule } from '@/constants/tunnel'\nimport { MUSIC_ALBUM_ID } from '@/config/app.config'\nimport { tunnelCache } from '.'\n\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/playlists.html\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/song-objects.html#special-keys\nexport interface Song {\n  id: number\n  name: string\n  album: string\n  artist: string\n  cover_art_url: string\n  url: string\n}\n\nconst PLAY_LIST_LIMIT = 68\nconst neteseMusic = new NeteaseMusic()\n\n// 获取歌单列表\nconst fetchSongList = async (): Promise<Array<Song>> => {\n  const result = await neteseMusic._playlist(MUSIC_ALBUM_ID, PLAY_LIST_LIMIT)\n  if (result.code < 0) {\n    throw new Error(result.message)\n  }\n  return (\n    result?.playlist?.tracks\n      // 过滤掉无版权音乐\n      ?.filter((track) => track?.privilege?.cp !== 0)\n      // 格式化数据\n      ?.map(\n        (track) =>\n          ({\n            id: track.id,\n            name: track.name,\n            album: track?.al?.name || '-',\n            artist: (track.ar || []).map((artist: any) => artist.name).join(' / '),\n            cover_art_url: track.al?.picUrl,\n            url: null as any as string\n          } as Song)\n      )\n  )\n}\n\n// 获取播放地址，403 暂不启用！\nconst fetchSongs = async (): Promise<Song[]> => {\n  // 1. 获取列表\n  const songs = await fetchSongList()\n  // 2. 使用列表的 IDs 获取 urls\n  const songIds = songs.map((song) => String(song.id))\n  const { data: songUrls } = await neteseMusic.url(songIds, 128)\n  // 3. 用 map 合成\n  const urlMap = new Map<number, string>(songUrls.map((songUrl) => [songUrl.id, songUrl.url]))\n  // 4. 合成可用数据，并过滤掉无有效地址的数据\n  return songs\n    .map((song) => ({\n      ...song,\n      url: urlMap.get(song.id) as string\n    }))\n    .filter((song) => !!song.url)\n}\n\nconst autoUpdateData = () => {\n  fetchSongList()\n    .then((data) => {\n      tunnelCache.set(TunnelModule.Music, data)\n      // 成功后 1 小时获取新数据\n      setTimeout(autoUpdateData, 1000 * 60 * 60 * 1)\n    })\n    .catch((error) => {\n      // 失败后 5 分钟更新一次数据\n      console.warn('[Tunnel Music]', '请求失败', error)\n      setTimeout(autoUpdateData, 1000 * 60 * 5)\n    })\n}\n\n// 初始化默认拉取数据\nautoUpdateData()\n\nexport const musicService = async (): Promise<any> => {\n  if (tunnelCache.has(TunnelModule.Music)) {\n    return tunnelCache.get(TunnelModule.Music)\n  } else {\n    const data = await fetchSongList()\n    tunnelCache.set(TunnelModule.Music, data)\n    return data\n  }\n}\n","/**\n * @file BFF Server tunnel\n * @module server.tunnel\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport LRU from 'lru-cache'\nimport express, { RequestHandler } from 'express'\nimport { INVALID_ERROR } from '@/constants/error'\nimport { TunnelModule, getTunnelApiPath } from '@/constants/tunnel'\nimport { bilibiliService } from './bilibili'\nimport { wallpaperService } from './wallpaper'\nimport { githubService } from './github'\nimport { musicService } from './music'\n\n// cache\nexport const tunnelCache = new LRU({\n  max: Infinity,\n  maxAge: 1000 * 60 * 60 // 1 hour cache\n})\n\n// router\nconst handleTunnelService = (tunnelService: () => Promise<any>): RequestHandler => {\n  return (_, response) => {\n    tunnelService()\n      .then((data) => response.send(data))\n      .catch((error) => {\n        response.status(INVALID_ERROR)\n        response.send(error?.message || String(error))\n      })\n  }\n}\n\nexport const tunnelRouter = express.Router()\ntunnelRouter.get(getTunnelApiPath(TunnelModule.BiliBili), handleTunnelService(bilibiliService))\ntunnelRouter.get(getTunnelApiPath(TunnelModule.Wallpaper), handleTunnelService(wallpaperService))\ntunnelRouter.get(getTunnelApiPath(TunnelModule.GitHub), handleTunnelService(githubService))\ntunnelRouter.get(getTunnelApiPath(TunnelModule.Music), handleTunnelService(musicService))\n","import type { MetaResult } from '@/services/meta'\n\nexport const resolveTemplate = (config: {\n  template: string\n  appHTML: string\n  metas: MetaResult\n  scripts?: string\n  manifest?: any\n}) => {\n  const { template, appHTML, metas, scripts, manifest } = config\n\n  const bodyScripts = [\n    scripts\n    // MARK: https://cn.vitejs.dev/config/#build-ssrmanifest\n    // client output less assets (3 js + 1 css) & built-in HTML\n    // manifest\n  ].join('\\n')\n\n  const html = template\n    .replace(/<title>[\\s\\S]*<\\/title>/, '')\n    .replace(`<html`, `<html ${metas.htmlAttrs} `)\n    .replace(`<head>`, `<head>\\n${metas.headTags}`)\n    .replace(`<!--app-html-->`, appHTML)\n    .replace(`<body>`, `<body ${metas.bodyAttrs}>`)\n    .replace(`</body>`, `\\n${bodyScripts}\\n</body>`)\n\n  return html\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { createServer } from 'vite'\nimport { resolveTemplate } from './template'\nimport { ROOT_PATH } from '../helper'\nimport type { RenderResult } from '@/ssr'\n\nexport const enableDevRuntime = async (app: Express) => {\n  const viteServer = await createServer({\n    root: process.cwd(),\n    logLevel: 'info',\n    server: {\n      middlewareMode: 'ssr',\n      watch: {\n        usePolling: true,\n        interval: 100\n      }\n    }\n  })\n\n  // use vite's connect instance as middleware\n  app.use(viteServer.middlewares)\n  app.use('*', async (request, response) => {\n    const { renderApp, renderError } = await viteServer.ssrLoadModule('/src/ssr.ts')\n    let template = fs.readFileSync(path.resolve(ROOT_PATH, 'index.html'), 'utf-8')\n\n    try {\n      const url = request.originalUrl\n      template = await viteServer.transformIndexHtml(url, template)\n      const redered: RenderResult = await renderApp(request)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      viteServer.ssrFixStacktrace(error)\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport compression from 'compression'\nimport { PRDO_CLIENT_PATH, PRDO_SERVER_PATH } from '../helper'\nimport { resolveTemplate } from './template'\nimport type { RenderResult } from '@/ssr'\n\nexport const enableProdRuntime = async (app: Express) => {\n  const template = fs.readFileSync(path.resolve(PRDO_CLIENT_PATH, 'template.html'), 'utf-8')\n  const { renderApp, renderError } = require(path.resolve(PRDO_SERVER_PATH, 'ssr.js'))\n\n  app.use(compression())\n  app.use('*', async (request, response) => {\n    try {\n      const redered: RenderResult = await renderApp(request)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","/**\n * @file BFF server config\n * @module config.bff\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const API_TUNNEL_PREFIX = '/_tunnel'\nexport const BFF_SERVER_PORT = 3000\n","/**\n * @file BFF server entry\n * @module BFF-server\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport http from 'http'\nimport express from 'express'\nimport cookieParser from 'cookie-parser'\nimport { NODE_ENV, isDev } from './environment'\nimport { startGTagScriptUpdater } from './server/gtag'\nimport { startGitHubChartUpdater } from './server/ghchart'\nimport { handleSitemapRequest, handleRSSRequest, startArchiveUpdater } from './server/archive'\nimport { tunnelRouter } from './server/tunnel'\nimport { PUBLIC_PATH } from './server/helper'\nimport { enableDevRuntime } from './server/runtime/dev'\nimport { enableProdRuntime } from './server/runtime/prod'\nimport { API_TUNNEL_PREFIX, BFF_SERVER_PORT } from './config/bff.config'\n\n// @ts-expect-error\nprocess.noDeprecation = true\n\n// replace global console\nconst { log, warn, info } = console\nconst color = (c) => (isDev ? c : '')\nglobal.console = Object.assign(console, {\n  log: (...args) => log('[log]', ...args),\n  info: (...args) => info(color('\\x1B[34m%s\\x1B[0m'), '[info]', ...args),\n  error: (...args) => info(color('\\x1B[31m%s\\x1B[0m'), '[error]', ...args),\n  warn: (...args) => warn(color('\\x1B[33m%s\\x1B[0m'), '[warn]', ...args)\n})\n\n// init app\nconst app = express()\nconst server = http.createServer(app)\n\n// cookie\napp.use(cookieParser())\n\n// static\napp.use(express.static(PUBLIC_PATH))\n\n// tunnel\napp.use(API_TUNNEL_PREFIX, tunnelRouter)\n\n// sitemap & rss\napp.use('/sitemap.xml', handleSitemapRequest)\napp.use('/rss.xml', handleRSSRequest)\n\n// app effect\nisDev ? enableDevRuntime(app) : enableProdRuntime(app)\n\n// run\nserver.listen(BFF_SERVER_PORT, () => {\n  const infos = [\n    `in ${NODE_ENV}`,\n    `at ${new Date().toLocaleString()}`,\n    `listening on ${JSON.stringify(server.address())}`\n  ]\n  console.info('[surmon.me]', `Run! ${infos.join(', ')}.`)\n  // run BFF services\n  startGTagScriptUpdater()\n  startGitHubChartUpdater()\n  startArchiveUpdater()\n})\n"],"names":["path","fs","UPDATE_TIME","axios","SitemapStream","EnumChangefreq","streamToPromise","Readable","RSS","loadEnv","LRU","autoUpdateData","WonderfulBingWallpaper","schedule","NeteaseMusic","express","createServer","compression","http","cookieParser"],"mappings":"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"}